Multitasking: Doing multiple task at the same time.

Process: a program in execution

Context: it is a process

Multiprocessing:
- executing multiple process at the same time.
- it happens at operating system level.

Context switch: switching from one process to another process by saving the metadata regarding the process

Multithreading:
- Executing multiple tasks at the same time at program level.
- Threads are independent executions.
- Threads share the common memory of process.
- Thread switch is less expensive as compared to context switch.

Thread Scheduler:
- It is program which decides the thread execution schedule.
- Threads has to be registered with thread scheduler
- To make any piece of code, as thread we have to use classes and interfaces provided by java.

# Thread
- it is class present in java.lang package
- Thread is piece of code
- Task
- it is independent flow of execution within the process

# Constructors of Thread class
  public java.lang.Thread();
  public java.lang.Thread(java.lang.Runnable);
  java.lang.Thread(java.lang.Runnable, java.security.AccessControlContext);
  public java.lang.Thread(java.lang.ThreadGroup, java.lang.Runnable);
  public java.lang.Thread(java.lang.String);
  public java.lang.Thread(java.lang.ThreadGroup, java.lang.String);
  public java.lang.Thread(java.lang.Runnable, java.lang.String);
  public java.lang.Thread(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String);
  public java.lang.Thread(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String, long);

What are the different ways to create a Thread?
1. by extending Thread class
    - drawback we can't extend other Thread class.
2. by implementing Runnable interface
    - This is recommended as we have option of extending one more class.

- For every java application there is one thread created by JVM that is main.
- Task of the main thread is written inside the main method.




















